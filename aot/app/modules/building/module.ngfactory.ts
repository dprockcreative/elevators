/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../../app/modules/building/module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '../../../../app/modules/elevator/module';
import * as import4 from '../../../../app/modules/shaft/module';
import * as import5 from '../../../../app/modules/floor/module';
import * as import6 from '@angular/common/src/localization';
import * as import7 from '../../../../app/modules/floor/service';
import * as import8 from '../../../../app/modules/shaft/service';
import * as import9 from '../../../../app/services/session.service';
import * as import10 from '../../../../app/services/tasks.service';
import * as import11 from '@angular/core/src/di/injector';
import * as import12 from '@angular/core/src/i18n/tokens';
import * as import13 from '@angular/http/src/http';
import * as import14 from '@angular/core/src/zone/ng_zone';
import * as import15 from '../../../../app/modules/dialog/service';
class BuildingModuleInjector extends import0.NgModuleInjector<import1.BuildingModule> {
  _CommonModule_0:import2.CommonModule;
  _ElevatorModule_1:import3.ElevatorModule;
  _ShaftModule_2:import4.ShaftModule;
  _FloorModule_3:import5.FloorModule;
  _BuildingModule_4:import1.BuildingModule;
  __NgLocalization_5:import6.NgLocaleLocalization;
  __FloorService_6:import7.FloorService;
  __ShaftService_7:import8.ShaftService;
  __SessionService_8:import9.SessionService;
  __TasksService_9:import10.TasksService;
  constructor(parent:import11.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_5():import6.NgLocaleLocalization {
    if ((this.__NgLocalization_5 == null)) { (this.__NgLocalization_5 = new import6.NgLocaleLocalization(this.parent.get(import12.LOCALE_ID))); }
    return this.__NgLocalization_5;
  }
  get _FloorService_6():import7.FloorService {
    if ((this.__FloorService_6 == null)) { (this.__FloorService_6 = new import7.FloorService()); }
    return this.__FloorService_6;
  }
  get _ShaftService_7():import8.ShaftService {
    if ((this.__ShaftService_7 == null)) { (this.__ShaftService_7 = new import8.ShaftService(this.parent.get(import13.Http))); }
    return this.__ShaftService_7;
  }
  get _SessionService_8():import9.SessionService {
    if ((this.__SessionService_8 == null)) { (this.__SessionService_8 = new import9.SessionService(this.parent.get(import14.NgZone),this.parent.get(import15.DialogService))); }
    return this.__SessionService_8;
  }
  get _TasksService_9():import10.TasksService {
    if ((this.__TasksService_9 == null)) { (this.__TasksService_9 = new import10.TasksService(this.parent.get(import14.NgZone),this._ShaftService_7)); }
    return this.__TasksService_9;
  }
  createInternal():import1.BuildingModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._ElevatorModule_1 = new import3.ElevatorModule();
    this._ShaftModule_2 = new import4.ShaftModule();
    this._FloorModule_3 = new import5.FloorModule();
    this._BuildingModule_4 = new import1.BuildingModule();
    return this._BuildingModule_4;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.ElevatorModule)) { return this._ElevatorModule_1; }
    if ((token === import4.ShaftModule)) { return this._ShaftModule_2; }
    if ((token === import5.FloorModule)) { return this._FloorModule_3; }
    if ((token === import1.BuildingModule)) { return this._BuildingModule_4; }
    if ((token === import6.NgLocalization)) { return this._NgLocalization_5; }
    if ((token === import7.FloorService)) { return this._FloorService_6; }
    if ((token === import8.ShaftService)) { return this._ShaftService_7; }
    if ((token === import9.SessionService)) { return this._SessionService_8; }
    if ((token === import10.TasksService)) { return this._TasksService_9; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const BuildingModuleNgFactory:import0.NgModuleFactory<import1.BuildingModule> = new import0.NgModuleFactory(BuildingModuleInjector,import1.BuildingModule);