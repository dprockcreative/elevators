/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../app/modules/dialog/components/dialog';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../../app/modules/dialog/service';
import * as import9 from '../../../../../app/modules/dialog/components/alert';
import * as import10 from './alert.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '../../../../../app/modules/dialog/components/confirm';
import * as import13 from './confirm.ngfactory';
import * as import14 from '../../../../../app/modules/dialog/components/wizard';
import * as import15 from './wizard.ngfactory';
import * as import16 from '../../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import17 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import18 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import19 from '@angular/core/src/change_detection/change_detection_util';
import * as import20 from '@angular/core/src/linker/template_ref';
import * as import21 from '@angular/common/src/directives/ng_if';
import * as import22 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import23 from '@angular/forms/src/directives/control_container';
import * as import24 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_DialogComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DialogComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.DialogComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_DialogComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_DialogComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.DialogComponent>;
  _DialogComponent_0_3:Wrapper_DialogComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DialogComponent_Host0,renderType_DialogComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'dialogs',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DialogComponent0(this.viewUtils,this,0,this._el_0);
    this._DialogComponent_0_3 = new Wrapper_DialogComponent(this.injectorGet(import8.DialogService,this.parentIndex));
    this.compView_0.create(this._DialogComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._DialogComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DialogComponent) && (0 === requestNodeIndex))) { return this._DialogComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DialogComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) { this._DialogComponent_0_3.context.ngAfterContentChecked(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DialogComponentNgFactory:import7.ComponentFactory<import0.DialogComponent> = new import7.ComponentFactory<import0.DialogComponent>('dialogs',View_DialogComponent_Host0,import0.DialogComponent);
const styles_DialogComponent:any[] = ([] as any[]);
class View_DialogComponent1 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import9.DialogAlert>;
  _DialogAlert_0_3:import10.Wrapper_DialogAlert;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_DialogComponent1,renderType_DialogComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'alert',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import10.View_DialogAlert0(this.viewUtils,this,0,this._el_0);
    this._DialogAlert_0_3 = new import10.Wrapper_DialogAlert(this.parentView.parentView.injectorGet(import8.DialogService,this.parentView.parentIndex));
    this.compView_0.create(this._DialogAlert_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.DialogAlert) && (0 === requestNodeIndex))) { return this._DialogAlert_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DialogAlert_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) { this._DialogAlert_0_3.context.ngAfterContentChecked(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_DialogComponent2 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import12.DialogConfirm>;
  _DialogConfirm_0_3:import13.Wrapper_DialogConfirm;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_DialogComponent2,renderType_DialogComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'confirm',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import13.View_DialogConfirm0(this.viewUtils,this,0,this._el_0);
    this._DialogConfirm_0_3 = new import13.Wrapper_DialogConfirm(this.parentView.parentView.injectorGet(import8.DialogService,this.parentView.parentIndex));
    this.compView_0.create(this._DialogConfirm_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.DialogConfirm) && (0 === requestNodeIndex))) { return this._DialogConfirm_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DialogConfirm_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) { this._DialogConfirm_0_3.context.ngAfterContentChecked(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_DialogComponent3 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import14.DialogWizard>;
  _DialogWizard_0_3:import15.Wrapper_DialogWizard;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import11.ViewContainer) {
    super(View_DialogComponent3,renderType_DialogComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'wizard',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_0 = new import15.View_DialogWizard0(this.viewUtils,this,0,this._el_0);
    this._DialogWizard_0_3 = new import15.Wrapper_DialogWizard(this.parentView.parentView.injectorGet(import8.DialogService,this.parentView.parentIndex));
    this.compView_0.create(this._DialogWizard_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.DialogWizard) && (0 === requestNodeIndex))) { return this._DialogWizard_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DialogWizard_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) { this._DialogWizard_0_3.context.ngAfterContentChecked(); }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_DialogComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_DialogComponent,{});
export class View_DialogComponent0 extends import1.AppView<import0.DialogComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _FormGroupDirective_14_3:import16.Wrapper_FormGroupDirective;
  _ControlContainer_14_4:any;
  _NgControlStatusGroup_14_5:import17.Wrapper_NgControlStatusGroup;
  _text_15:any;
  _anchor_16:any;
  /*private*/ _vc_16:import11.ViewContainer;
  _TemplateRef_16_5:any;
  _NgIf_16_6:import18.Wrapper_NgIf;
  _text_17:any;
  _anchor_18:any;
  /*private*/ _vc_18:import11.ViewContainer;
  _TemplateRef_18_5:any;
  _NgIf_18_6:import18.Wrapper_NgIf;
  _text_19:any;
  _anchor_20:any;
  /*private*/ _vc_20:import11.ViewContainer;
  _TemplateRef_20_5:any;
  _NgIf_20_6:import18.Wrapper_NgIf;
  _text_21:any;
  _text_22:any;
  _text_23:any;
  _text_24:any;
  /*private*/ _expr_37:any;
  /*private*/ _expr_38:any;
  /*private*/ _expr_39:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DialogComponent0,renderType_DialogComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_37 = import19.UNINITIALIZED;
    this._expr_38 = import19.UNINITIALIZED;
    this._expr_39 = import19.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'dialog',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'article',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n        ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'header',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n          ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'h3',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'',(null as any));
    this._text_9 = this.renderer.createText(this._el_5,'\n          ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_5,'h5',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'',(null as any));
    this._text_12 = this.renderer.createText(this._el_5,'\n        ',(null as any));
    this._text_13 = this.renderer.createText(this._el_3,'\n        ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_3,'form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_14_3 = new import16.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_14_4 = this._FormGroupDirective_14_3.context;
    this._NgControlStatusGroup_14_5 = new import17.Wrapper_NgControlStatusGroup(this._ControlContainer_14_4);
    this._text_15 = this.renderer.createText(this._el_14,'\n          ',(null as any));
    this._anchor_16 = this.renderer.createTemplateAnchor(this._el_14,(null as any));
    this._vc_16 = new import11.ViewContainer(16,14,this,this._anchor_16);
    this._TemplateRef_16_5 = new import20.TemplateRef_(this,16,this._anchor_16);
    this._NgIf_16_6 = new import18.Wrapper_NgIf(this._vc_16.vcRef,this._TemplateRef_16_5);
    this._text_17 = this.renderer.createText(this._el_14,'\n          ',(null as any));
    this._anchor_18 = this.renderer.createTemplateAnchor(this._el_14,(null as any));
    this._vc_18 = new import11.ViewContainer(18,14,this,this._anchor_18);
    this._TemplateRef_18_5 = new import20.TemplateRef_(this,18,this._anchor_18);
    this._NgIf_18_6 = new import18.Wrapper_NgIf(this._vc_18.vcRef,this._TemplateRef_18_5);
    this._text_19 = this.renderer.createText(this._el_14,'\n          ',(null as any));
    this._anchor_20 = this.renderer.createTemplateAnchor(this._el_14,(null as any));
    this._vc_20 = new import11.ViewContainer(20,14,this,this._anchor_20);
    this._TemplateRef_20_5 = new import20.TemplateRef_(this,20,this._anchor_20);
    this._NgIf_20_6 = new import18.Wrapper_NgIf(this._vc_20.vcRef,this._TemplateRef_20_5);
    this._text_21 = this.renderer.createText(this._el_14,'\n        ',(null as any));
    this._text_22 = this.renderer.createText(this._el_3,'\n      ',(null as any));
    this._text_23 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_24 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_14));
    this._FormGroupDirective_14_3.subscribe(this,this.eventHandler(this.handleEvent_14),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._anchor_16,
      this._text_17,
      this._anchor_18,
      this._text_19,
      this._anchor_20,
      this._text_21,
      this._text_22,
      this._text_23,
      this._text_24
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import20.TemplateRef) && (16 === requestNodeIndex))) { return this._TemplateRef_16_5; }
    if (((token === import21.NgIf) && (16 === requestNodeIndex))) { return this._NgIf_16_6.context; }
    if (((token === import20.TemplateRef) && (18 === requestNodeIndex))) { return this._TemplateRef_18_5; }
    if (((token === import21.NgIf) && (18 === requestNodeIndex))) { return this._NgIf_18_6.context; }
    if (((token === import20.TemplateRef) && (20 === requestNodeIndex))) { return this._TemplateRef_20_5; }
    if (((token === import21.NgIf) && (20 === requestNodeIndex))) { return this._NgIf_20_6.context; }
    if (((token === import22.FormGroupDirective) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._FormGroupDirective_14_3.context; }
    if (((token === import23.ControlContainer) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._ControlContainer_14_4; }
    if (((token === import24.NgControlStatusGroup) && ((14 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._NgControlStatusGroup_14_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_14_0_0:any = this.context.dialog.form;
    this._FormGroupDirective_14_3.check_form(currVal_14_0_0,throwOnChange,false);
    this._FormGroupDirective_14_3.ngDoCheck(this,this._el_14,throwOnChange);
    this._NgControlStatusGroup_14_5.ngDoCheck(this,this._el_14,throwOnChange);
    const currVal_16_0_0:any = (this.context.dialog.type === 'alert');
    this._NgIf_16_6.check_ngIf(currVal_16_0_0,throwOnChange,false);
    this._NgIf_16_6.ngDoCheck(this,this._anchor_16,throwOnChange);
    const currVal_18_0_0:any = (this.context.dialog.type === 'confirm');
    this._NgIf_18_6.check_ngIf(currVal_18_0_0,throwOnChange,false);
    this._NgIf_18_6.ngDoCheck(this,this._anchor_18,throwOnChange);
    const currVal_20_0_0:any = (this.context.dialog.type === 'wizard');
    this._NgIf_20_6.check_ngIf(currVal_20_0_0,throwOnChange,false);
    this._NgIf_20_6.ngDoCheck(this,this._anchor_20,throwOnChange);
    this._vc_16.detectChangesInNestedViews(throwOnChange);
    this._vc_18.detectChangesInNestedViews(throwOnChange);
    this._vc_20.detectChangesInNestedViews(throwOnChange);
    const currVal_37:any = this.context.open();
    if (import3.checkBinding(throwOnChange,this._expr_37,currVal_37)) {
      this.renderer.setElementAttribute(this._el_1,'open',((currVal_37 == null)? (null as any): currVal_37.toString()));
      this._expr_37 = currVal_37;
    }
    const currVal_38:any = import3.inlineInterpolate(1,'',this.context.header(),'');
    if (import3.checkBinding(throwOnChange,this._expr_38,currVal_38)) {
      this.renderer.setText(this._text_8,currVal_38);
      this._expr_38 = currVal_38;
    }
    const currVal_39:any = import3.inlineInterpolate(1,'',this.context.count(),'');
    if (import3.checkBinding(throwOnChange,this._expr_39,currVal_39)) {
      this.renderer.setText(this._text_11,currVal_39);
      this._expr_39 = currVal_39;
    }
    this._NgControlStatusGroup_14_5.checkHost(this,this,this._el_14,throwOnChange);
  }
  destroyInternal():void {
    this._vc_16.destroyNestedViews();
    this._vc_18.destroyNestedViews();
    this._vc_20.destroyNestedViews();
    this._FormGroupDirective_14_3.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 16)) { return new View_DialogComponent1(this.viewUtils,this,16,this._anchor_16,this._vc_16); }
    if ((nodeIndex == 18)) { return new View_DialogComponent2(this.viewUtils,this,18,this._anchor_18,this._vc_18); }
    if ((nodeIndex == 20)) { return new View_DialogComponent3(this.viewUtils,this,20,this._anchor_20,this._vc_20); }
    return (null as any);
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_14_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.submit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}