/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../../../app/modules/dialog/components/wizard';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../../app/modules/dialog/service';
import * as import9 from '../../../../../app/modules/dialog/factories';
import * as import10 from '../factories.ngfactory';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '@angular/core/src/linker/component_factory_resolver';
import * as import13 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/common/src/directives/ng_if';
import * as import16 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import17 from '@angular/core/src/change_detection/change_detection_util';
import * as import18 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import19 from '@angular/common/src/directives/ng_for';
export var Wrapper_DialogWizard = (function () {
    function Wrapper_DialogWizard(p0) {
        this._changed = false;
        this.context = new import0.DialogWizard(p0);
    }
    Wrapper_DialogWizard.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DialogWizard.prototype.ngOnDestroy = function () {
    };
    Wrapper_DialogWizard.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_DialogWizard.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_DialogWizard.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_DialogWizard.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_DialogWizard;
}());
var renderType_DialogWizard_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_DialogWizard_Host0 = (function (_super) {
    __extends(View_DialogWizard_Host0, _super);
    function View_DialogWizard_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DialogWizard_Host0, renderType_DialogWizard_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_DialogWizard_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'wizard', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_DialogWizard0(this.viewUtils, this, 0, this._el_0);
        this._DialogWizard_0_3 = new Wrapper_DialogWizard(this.injectorGet(import8.DialogService, this.parentIndex));
        this.compView_0.create(this._DialogWizard_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._DialogWizard_0_3.context);
    };
    View_DialogWizard_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DialogWizard) && (0 === requestNodeIndex))) {
            return this._DialogWizard_0_3.context;
        }
        return notFoundResult;
    };
    View_DialogWizard_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DialogWizard_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            this._DialogWizard_0_3.context.ngAfterContentChecked();
        }
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DialogWizard_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_DialogWizard_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DialogWizard_Host0;
}(import1.AppView));
export var DialogWizardNgFactory = new import7.ComponentFactory('wizard', View_DialogWizard_Host0, import0.DialogWizard);
var styles_DialogWizard = [];
var View_DialogWizard2 = (function (_super) {
    __extends(View_DialogWizard2, _super);
    function View_DialogWizard2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DialogWizard2, renderType_DialogWizard, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DialogWizard2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'content-component', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_0 = new import10.View_ContentComponent0(this.viewUtils, this, 0, this._el_0);
        this._ComponentFactoryResolver_0_3 = new import12.CodegenComponentFactoryResolver([
            import10.GenericContentComponentNgFactory,
            import10.InputTextContentComponentNgFactory,
            import10.InputRangeContentComponentNgFactory
        ], this.parentView.injectorGet(import12.ComponentFactoryResolver, this.parentIndex));
        this._ContentComponent_0_4 = new import10.Wrapper_ContentComponent(this._ComponentFactoryResolver_0_3);
        this.compView_0.create(this._ContentComponent_0_4.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_DialogWizard2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.ComponentFactoryResolver) && (0 === requestNodeIndex))) {
            return this._ComponentFactoryResolver_0_3;
        }
        if (((token === import9.ContentComponent) && (0 === requestNodeIndex))) {
            return this._ContentComponent_0_4.context;
        }
        return notFoundResult;
    };
    View_DialogWizard2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.parentView.context.$implicit;
        this._ContentComponent_0_4.check_dcd(currVal_0_0_0, throwOnChange, false);
        this._ContentComponent_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_DialogWizard2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_DialogWizard2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_DialogWizard2;
}(import1.AppView));
var View_DialogWizard1 = (function (_super) {
    __extends(View_DialogWizard1, _super);
    function View_DialogWizard1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_DialogWizard1, renderType_DialogWizard, import5.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_DialogWizard1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n      ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_2 = new import11.ViewContainer(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import14.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import13.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n    ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ]), null);
        return null;
    };
    View_DialogWizard1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import15.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        return notFoundResult;
    };
    View_DialogWizard1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = (this.context.index == this.parentView.context.dialog.index);
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
    };
    View_DialogWizard1.prototype.destroyInternal = function () {
        this._vc_2.destroyNestedViews();
    };
    View_DialogWizard1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DialogWizard1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 2)) {
            return new View_DialogWizard2(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    return View_DialogWizard1;
}(import1.AppView));
var renderType_DialogWizard = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_DialogWizard, {});
export var View_DialogWizard0 = (function (_super) {
    __extends(View_DialogWizard0, _super);
    function View_DialogWizard0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DialogWizard0, renderType_DialogWizard, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
        this._expr_19 = import17.UNINITIALIZED;
        this._expr_20 = import17.UNINITIALIZED;
        this._expr_21 = import17.UNINITIALIZED;
    }
    View_DialogWizard0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import11.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import14.TemplateRef_(this, 1, this._anchor_1);
        this._NgFor_1_6 = new import16.Wrapper_NgFor(this._vc_1.vcRef, this._TemplateRef_1_5, this.parentView.injectorGet(import18.IterableDiffers, this.parentIndex), this.ref);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_3 = import3.createRenderElement(this.renderer, parentRenderNode, 'footer', import3.EMPTY_INLINE_ARRAY, null);
        this._text_4 = this.renderer.createText(this._el_3, '\n      ', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_3, 'label', import3.EMPTY_INLINE_ARRAY, null);
        this._text_6 = this.renderer.createText(this._el_5, '\n       ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_5, 'input', new import3.InlineArray2(2, 'type', 'button'), null);
        this._text_8 = this.renderer.createText(this._el_5, '\n      ', null);
        this._text_9 = this.renderer.createText(this._el_3, '\n      ', null);
        this._el_10 = import3.createRenderElement(this.renderer, this._el_3, 'label', import3.EMPTY_INLINE_ARRAY, null);
        this._text_11 = this.renderer.createText(this._el_10, '\n       ', null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_10, 'input', new import3.InlineArray2(2, 'type', 'submit'), null);
        this._text_13 = this.renderer.createText(this._el_10, '\n      ', null);
        this._text_14 = this.renderer.createText(this._el_3, '\n    ', null);
        this._text_15 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_7, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_7));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._anchor_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._text_15
        ]), [disposable_0]);
        return null;
    };
    View_DialogWizard0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import19.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6.context;
        }
        return notFoundResult;
    };
    View_DialogWizard0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this.context.dcds;
        this._NgFor_1_6.check_ngForOf(currVal_1_0_0, throwOnChange, false);
        this._NgFor_1_6.ngDoCheck(this, this._anchor_1, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
        var currVal_19 = this.context.label('no', 'start');
        if (import3.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setElementProperty(this._el_7, 'value', currVal_19);
            this._expr_19 = currVal_19;
        }
        var currVal_20 = this.context.label('yes', 'end');
        if (import3.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            this.renderer.setElementProperty(this._el_12, 'value', currVal_20);
            this._expr_20 = currVal_20;
        }
        var currVal_21 = this.context.disabled();
        if (import3.checkBinding(throwOnChange, this._expr_21, currVal_21)) {
            this.renderer.setElementProperty(this._el_12, 'disabled', currVal_21);
            this._expr_21 = currVal_21;
        }
    };
    View_DialogWizard0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
    };
    View_DialogWizard0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_DialogWizard1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        return null;
    };
    View_DialogWizard0.prototype.handleEvent_7 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.reset() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_DialogWizard0;
}(import1.AppView));
//# sourceMappingURL=wizard.ngfactory.js.map