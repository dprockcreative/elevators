/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../app/modules/dialog/factories';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/component_factory_resolver';
import * as import10 from '@angular/core/src/linker/query_list';
import * as import11 from '@angular/core/src/linker/view_container';
import * as import12 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import13 from '@angular/core/src/security';
import * as import14 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import15 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import16 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import17 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/forms/src/directives/default_value_accessor';
import * as import20 from '@angular/forms/src/directives/control_value_accessor';
import * as import21 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import22 from '@angular/forms/src/directives/ng_control';
import * as import23 from '@angular/forms/src/directives/ng_control_status';
import * as import24 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import25 from '@angular/forms/src/directives/control_container';
import * as import26 from '../../../node_modules/@angular/forms/src/directives/range_value_accessor.ngfactory';
import * as import27 from '@angular/forms/src/directives/range_value_accessor';
export class Wrapper_ContentComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ContentComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.ContentComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_dcd(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.dcd = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_GenericContentComponent {
  /*private*/ _eventHandler:Function;
  context:import0.GenericContentComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.GenericContentComponent(p0,p1);
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_InputTextContentComponent {
  /*private*/ _eventHandler:Function;
  context:import0.InputTextContentComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.InputTextContentComponent(p0);
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_InputRangeContentComponent {
  /*private*/ _eventHandler:Function;
  context:import0.InputRangeContentComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.InputRangeContentComponent(p0);
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ContentComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ContentComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ContentComponent>;
  _ComponentFactoryResolver_0_3:any;
  _ContentComponent_0_4:Wrapper_ContentComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ContentComponent_Host0,renderType_ContentComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'content-component',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ContentComponent0(this.viewUtils,this,0,this._el_0);
    this._ComponentFactoryResolver_0_3 = new import9.CodegenComponentFactoryResolver([
      GenericContentComponentNgFactory,
      InputTextContentComponentNgFactory,
      InputRangeContentComponentNgFactory
    ]
    ,this.injectorGet(import9.ComponentFactoryResolver,this.parentIndex));
    this._ContentComponent_0_4 = new Wrapper_ContentComponent(this._ComponentFactoryResolver_0_3);
    this.compView_0.create(this._ContentComponent_0_4.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ContentComponent_0_4.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import9.ComponentFactoryResolver) && (0 === requestNodeIndex))) { return this._ComponentFactoryResolver_0_3; }
    if (((token === import0.ContentComponent) && (0 === requestNodeIndex))) { return this._ContentComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ContentComponent_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ContentComponentNgFactory:import8.ComponentFactory<import0.ContentComponent> = new import8.ComponentFactory<import0.ContentComponent>('content-component',View_ContentComponent_Host0,import0.ContentComponent);
const styles_ContentComponent:any[] = ([] as any[]);
var renderType_ContentComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_ContentComponent,{});
export class View_ContentComponent0 extends import2.AppView<import0.ContentComponent> {
  _viewQuery_dcc_0:import10.QueryList<any>;
  _el_0:any;
  /*private*/ _vc_0:import11.ViewContainer;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ContentComponent0,renderType_ContentComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_dcc_0 = new import10.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._vc_0 = new import11.ViewContainer(0,(null as any),this,this._el_0);
    this._viewQuery_dcc_0.reset([this._vc_0.vcRef]);
    this.context.dcc = this._viewQuery_dcc_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
}
var renderType_GenericContentComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_GenericContentComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.GenericContentComponent>;
  _GenericContentComponent_0_3:Wrapper_GenericContentComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_GenericContentComponent_Host0,renderType_GenericContentComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'generic-content',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_GenericContentComponent0(this.viewUtils,this,0,this._el_0);
    this._GenericContentComponent_0_3 = new Wrapper_GenericContentComponent(this.injector(0),this.injectorGet(import12.DomSanitizer,this.parentIndex));
    this.compView_0.create(this._GenericContentComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._GenericContentComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.GenericContentComponent) && (0 === requestNodeIndex))) { return this._GenericContentComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._GenericContentComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const GenericContentComponentNgFactory:import8.ComponentFactory<import0.GenericContentComponent> = new import8.ComponentFactory<import0.GenericContentComponent>('generic-content',View_GenericContentComponent_Host0,import0.GenericContentComponent);
const styles_GenericContentComponent:any[] = ([] as any[]);
var renderType_GenericContentComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_GenericContentComponent,{});
export class View_GenericContentComponent0 extends import2.AppView<import0.GenericContentComponent> {
  _el_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_GenericContentComponent0,renderType_GenericContentComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_1 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = this.context.template;
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_0,'innerHTML',this.viewUtils.sanitizer.sanitize(import13.SecurityContext.HTML,currVal_1));
      this._expr_1 = currVal_1;
    }
  }
}
var renderType_InputTextContentComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_InputTextContentComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.InputTextContentComponent>;
  _InputTextContentComponent_0_3:Wrapper_InputTextContentComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InputTextContentComponent_Host0,renderType_InputTextContentComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'input-text-content',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_InputTextContentComponent0(this.viewUtils,this,0,this._el_0);
    this._InputTextContentComponent_0_3 = new Wrapper_InputTextContentComponent(this.injector(0));
    this.compView_0.create(this._InputTextContentComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._InputTextContentComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.InputTextContentComponent) && (0 === requestNodeIndex))) { return this._InputTextContentComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InputTextContentComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const InputTextContentComponentNgFactory:import8.ComponentFactory<import0.InputTextContentComponent> = new import8.ComponentFactory<import0.InputTextContentComponent>('input-text-content',View_InputTextContentComponent_Host0,import0.InputTextContentComponent);
const styles_InputTextContentComponent:any[] = ([] as any[]);
var renderType_InputTextContentComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_InputTextContentComponent,{});
export class View_InputTextContentComponent0 extends import2.AppView<import0.InputTextContentComponent> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import14.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import15.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _el_3:any;
  _DefaultValueAccessor_3_3:import16.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_3_4:any[];
  _FormControlName_3_5:import17.Wrapper_FormControlName;
  _NgControl_3_6:any;
  _NgControlStatus_3_7:import15.Wrapper_NgControlStatus;
  _text_4:any;
  _text_5:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InputTextContentComponent0,renderType_InputTextContentComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_1_3 = new import14.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import15.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'input',new import3.InlineArray2(2,'type','text'),(null as any));
    this._DefaultValueAccessor_3_3 = new import16.Wrapper_DefaultValueAccessor(this.renderer,new import18.ElementRef(this._el_3));
    this._NG_VALUE_ACCESSOR_3_4 = [this._DefaultValueAccessor_3_3.context];
    this._FormControlName_3_5 = new import17.Wrapper_FormControlName(this._ControlContainer_1_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_3_4);
    this._NgControl_3_6 = this._FormControlName_3_5.context;
    this._NgControlStatus_3_7 = new import15.Wrapper_NgControlStatus(this._NgControl_3_6);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_3));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.DefaultValueAccessor) && (3 === requestNodeIndex))) { return this._DefaultValueAccessor_3_3.context; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (3 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_3_4; }
    if (((token === import21.FormControlName) && (3 === requestNodeIndex))) { return this._FormControlName_3_5.context; }
    if (((token === import22.NgControl) && (3 === requestNodeIndex))) { return this._NgControl_3_6; }
    if (((token === import23.NgControlStatus) && (3 === requestNodeIndex))) { return this._NgControlStatus_3_7.context; }
    if (((token === import24.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import25.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._ControlContainer_1_4; }
    if (((token === import23.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.form;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this._DefaultValueAccessor_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_3_1_0:any = this.context.name;
    this._FormControlName_3_5.check_name(currVal_3_1_0,throwOnChange,false);
    this._FormControlName_3_5.ngDoCheck(this,this._el_3,throwOnChange);
    this._NgControlStatus_3_7.ngDoCheck(this,this._el_3,throwOnChange);
    const currVal_14:any = import3.inlineInterpolate(1,'',this.context.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementProperty(this._el_1,'title',currVal_14);
      this._expr_14 = currVal_14;
    }
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
    this._NgControlStatus_3_7.checkHost(this,this,this._el_3,throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_3_5.ngOnDestroy();
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_3_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
var renderType_InputRangeContentComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_InputRangeContentComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.InputRangeContentComponent>;
  _InputRangeContentComponent_0_3:Wrapper_InputRangeContentComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InputRangeContentComponent_Host0,renderType_InputRangeContentComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'input-range-content',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_InputRangeContentComponent0(this.viewUtils,this,0,this._el_0);
    this._InputRangeContentComponent_0_3 = new Wrapper_InputRangeContentComponent(this.injector(0));
    this.compView_0.create(this._InputRangeContentComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._InputRangeContentComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.InputRangeContentComponent) && (0 === requestNodeIndex))) { return this._InputRangeContentComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InputRangeContentComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const InputRangeContentComponentNgFactory:import8.ComponentFactory<import0.InputRangeContentComponent> = new import8.ComponentFactory<import0.InputRangeContentComponent>('input-range-content',View_InputRangeContentComponent_Host0,import0.InputRangeContentComponent);
const styles_InputRangeContentComponent:any[] = ([] as any[]);
var renderType_InputRangeContentComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_InputRangeContentComponent,{});
export class View_InputRangeContentComponent0 extends import2.AppView<import0.InputRangeContentComponent> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import14.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import15.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _DefaultValueAccessor_5_3:import16.Wrapper_DefaultValueAccessor;
  _RangeValueAccessor_5_4:import26.Wrapper_RangeValueAccessor;
  _NG_VALUE_ACCESSOR_5_5:any[];
  _FormControlName_5_6:import17.Wrapper_FormControlName;
  _NgControl_5_7:any;
  _NgControlStatus_5_8:import15.Wrapper_NgControlStatus;
  _text_6:any;
  _text_7:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InputRangeContentComponent0,renderType_InputRangeContentComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
    this._expr_22 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'label',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_1_3 = new import14.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import15.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','range'),(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_1,'input',new import3.InlineArray2(2,'type','range'),(null as any));
    this._DefaultValueAccessor_5_3 = new import16.Wrapper_DefaultValueAccessor(this.renderer,new import18.ElementRef(this._el_5));
    this._RangeValueAccessor_5_4 = new import26.Wrapper_RangeValueAccessor(this.renderer,new import18.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_5 = [
      this._DefaultValueAccessor_5_3.context,
      this._RangeValueAccessor_5_4.context
    ]
    ;
    this._FormControlName_5_6 = new import17.Wrapper_FormControlName(this._ControlContainer_1_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_5);
    this._NgControl_5_7 = this._FormControlName_5_6.context;
    this._NgControlStatus_5_8 = new import15.Wrapper_NgControlStatus(this._NgControl_5_7);
    this._text_6 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray8(6,'input',(null as any),'blur',(null as any),'change',(null as any)),this.eventHandler(this.handleEvent_5));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_3.context; }
    if (((token === import27.RangeValueAccessor) && (5 === requestNodeIndex))) { return this._RangeValueAccessor_5_4.context; }
    if (((token === import20.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_5; }
    if (((token === import21.FormControlName) && (5 === requestNodeIndex))) { return this._FormControlName_5_6.context; }
    if (((token === import22.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_7; }
    if (((token === import23.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_8.context; }
    if (((token === import24.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import25.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._ControlContainer_1_4; }
    if (((token === import23.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.form;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    this._DefaultValueAccessor_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._RangeValueAccessor_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_2_0:any = this.context.name;
    this._FormControlName_5_6.check_name(currVal_5_2_0,throwOnChange,false);
    this._FormControlName_5_6.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_8.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_17:any = import3.inlineInterpolate(1,'',this.context.label,'');
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_1,'title',currVal_17);
      this._expr_17 = currVal_17;
    }
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
    const currVal_18:any = import3.inlineInterpolate(1,'\n        ',this.context.data(),'\n      ');
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setText(this._text_4,currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = import3.inlineInterpolate(1,'',this.context.min,'');
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementProperty(this._el_5,'min',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = import3.inlineInterpolate(1,'',this.context.max,'');
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementProperty(this._el_5,'max',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = import3.inlineInterpolate(1,'',this.context.step,'');
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_5,'step',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = import3.inlineInterpolate(1,'',this.context.value,'');
    if (import3.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementProperty(this._el_5,'value',currVal_22);
      this._expr_22 = currVal_22;
    }
    this._NgControlStatus_5_8.checkHost(this,this,this._el_5,throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_5_6.ngOnDestroy();
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_5_3.handleEvent(eventName,$event) && result);
    result = (this._RangeValueAccessor_5_4.handleEvent(eventName,$event) && result);
    return result;
  }
}